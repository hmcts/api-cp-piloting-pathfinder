name: Publish OpenAPI Spec to APIHub (Release)

on:
  release:
    types: [published]

jobs:
  API-Version:
    runs-on: ubuntu-latest
    outputs:
      released_version: ${{ steps.vars.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: vars
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"  # strip 'v' prefix
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  Apply-Version-to-API-Spec:
    needs: [ API-Version ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find OpenAPI file
        id: find_spec
        env:
          FILE_PATH_OPENAPI: "src/main/resources/openapi"
        run: |
          FILE=$(find ${FILE_PATH_OPENAPI} -name "*.openapi.yml" | head -n 1)
          echo "openapi_file=$FILE" >> $GITHUB_OUTPUT

      - name: Update info.version in OpenAPI spec using yq
        env:
          API_NAME: ${{ github.event.repository.name }}
          API_VERSION: ${{ needs.API-Version.outputs.released_version }}
        uses: mikefarah/yq@v4.45.1
        with:
          cmd: |
            yq '
              .info.version = strenv(API_VERSION) |
              .servers[0].url = "https://virtserver.swaggerhub.com/HMCTS-DTS/" + strenv(API_NAME) + "/" + strenv(API_VERSION)
            ' "${{ steps.find_spec.outputs.openapi_file }}" > openapi-versioned.yml

      - name: Upload versioned OpenAPI spec
        uses: actions/upload-artifact@v4
        with:
          name: openapi-versioned
          path: openapi-versioned.yml

  Push-API-to-APIHub:
    needs: [ API-Version, Apply-Version-to-API-Spec ]
    runs-on: ubuntu-latest
    env:
      SWAGGERHUB_API_KEY: ${{ secrets.APIHUB_API_KEY }}
      APIHUB_OWNER: ${{ vars.APIHUB_ORGANISATION }}
      API_NAME: ${{ github.event.repository.name }}
      API_VERSION: ${{ needs.API-Version.outputs.released_version }}
      CLI_API_REF: ${{ env.APIHUB_OWNER }}/${{ env.API_NAME }}/${{ env.API_VERSION }}

    steps:
      - name: Download versioned OpenAPI spec
        uses: actions/download-artifact@v4
        with:
          name: openapi-versioned

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install SwaggerHub CLI
        run: npm install -g swaggerhub-cli

      - name: Push API definition into API Hub (PUBLISHED)
        env:
          PUBLISHED: true
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apicreate
        run: |
          swaggerhub api:create "${CLI_API_REF}" --file openapi-versioned.yml --published ${PUBLISHED} --visibility public

      - name: Check the API definition exists
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apiget
        run: |
          set -o pipefail
          if ! swaggerhub api:get "${CLI_API_REF}" 2>&1 | tee error.log; then
            echo "❌ API definition was not found on APIHub"
            echo "--- CLI Error Output ---"
            cat error.log
            exit 1
          fi

      - name: Validate definition
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apivalidate
        run: |
          set -o pipefail
          if ! swaggerhub api:validate "${CLI_API_REF}" 2>&1 | tee error.log; then
            echo "❌ OpenAPI definition failed validation"
            echo "--- CLI Error Output ---"
            cat error.log
            exit 1
          fi

      - name: Set released version to the default API Definition
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apisetdefault
        run: |
          swaggerhub api:setdefault "${CLI_API_REF}"
